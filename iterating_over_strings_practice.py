password = "SecureP@ss123"

"""
len(password) returns the length of the string (13 characters in this case).
range(len(password)) generates a sequence of numbers from 0 to 12.
The for loop iterates over each index i in this range.
The condition i % 2 == 0 checks if the index i is even.
% is the modulo operator, which gives the remainder after division. 
If the remainder is 0, the number is even.
If the condition is true, the character at the current index (password[i]) is printed.
end='' ensures the output is printed on the same line without spaces or newlines.

The indices of the string "SecureP@ss123" are:

Character	S	e	c	u	r	e	P	@	s	s	1	2	3
Index	    0	1	2	3	4	5	6	7	8	9	10	11	12

Even indices: 0, 2, 4, 6, 8, 10, 12
Characters at these positions: S, c, r, P, s, 1, 3

Output: ScrPs13
"""

for i in range(len(password)):
    if i % 2 == 0:
        print(password[i], end='')

print("\n")
"""
In a program to check if a word is a palindrome, which of the following code snippets would be 
most useful for comparing characters at the beginning and end of the string?
"""

word = "hello"  # length is 5
for i in range(len(word) // 2):  # range(5 // 2) = range(2) -> [0, 1]
    print(i, word[i], word[-(i+1)])


"""
Explanation
len(word):

This returns the length (number of characters) of the string variable word.
Example: If word = "hello", then len(word) is 5.
// 2:

This is the floor division operator, which divides the length by 2 and returns an integer without any decimal part.
Example:
If len(word) is 5, len(word) // 2 is 2 (because 5 รท 2 = 2.5, floor division rounds down to 2).
If len(word) is 6, len(word) // 2 is 3.
range(len(word) // 2):

The range() function generates a sequence of numbers starting from 0 up to (but not including) the value len(word) // 2.
Example:
If len(word) // 2 is 2, range(2) generates the sequence [0, 1].
If len(word) // 2 is 3, range(3) generates [0, 1, 2].
for i in range(...):

This is a for loop that iterates over the numbers generated by range(...).
On each iteration, the variable i takes on the next number in the sequence.
"""